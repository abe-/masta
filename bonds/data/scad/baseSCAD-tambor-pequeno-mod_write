module digits(numChars  = 0,
              chars     = [0],
              size      = [1,1,1], 
              center    = false,
              trans     = [0,0,0],
              rot       = [0,0,0],
              spacing   = 1/3, //space between characters is this times character width
              lineWidth = 1/3) { //width of line used to draw is this times the character width
	assign(w = size[0]/(numChars+numChars*spacing-spacing))
	assign(g = w * spacing)
	assign(L = w * lineWidth)
	assign(t = size[2])
	assign(h = (size[1]+L)/2)
	assign(v = h-L)
	assign(x = (w-L)/2) 
	assign(y = (h-L)/2) {
		translate(trans) rotate(rot){
			for (i=[0:numChars-1]) assign(c=chars[i]) translate([(1/2-numChars/2+i)*(w+g),0,-t/2] + (center ? 0 : 1)*size/2) {
				if (c==".")                                                             translate([ 0,L/2-v,t/2]) cube([2*L,2*L,t], center=true); //dot
				if (c==1)                                                               translate([ 0,0,t/2])     cube([L,2*h-L,t], center=true); //1
				if (c==0||      c==2||c==3||      c==5||c==6||c==7||c==8||c==9)         translate([ 0, v,t/2])    cube([w,L,t], center=true); //top
				if (            c==2||c==3||c==4||c==5||c==6||      c==8||c==9||c=="-") translate([ 0, 0,t/2])    cube([w,L,t], center=true); //middle
				if (c==0||      c==2||c==3||      c==5||c==6||      c==8||c==9)         translate([ 0,-v,t/2])    cube([w,L,t], center=true); //bottom
				if (c==0||                  c==4||c==5||c==6||      c==8||c==9)         translate([-x, y,t/2])    cube([L,h,t], center=true); //upper left
				if (c==0||c==2||c==3||c==4||                  c==7||c==8||c==9)         translate([ x, y,t/2])    cube([L,h,t], center=true); //upper right
				if (c==0||c==2||                        c==6||      c==8)               translate([-x,-y,t/2])    cube([L,h,t], center=true); //lower left
				if (c==0||            c==3||c==4||c==5||c==6||c==7||c==8||c==9)         translate([ x,-y,t/2])    cube([L,h,t], center=true); //lower right
			}
	}}
}

//demonstration
translate(-[1,1,1]/4) cube([18,3,1]/2);
color([0,0.75,0])  digits(17,["-",0,3,".",1,4,1,5,9,2,6,5,3,5,8,9,7],[17,2,5]/2,false,[0,0,0],[0,0,0],1/3,1.4/3); 

color([0,0,0]) translate([0,0,-10]) cube([1000,1000,1],center=true);

module tambor(num, posicion, azim, alt) {

	grosor = 12; // calibre del agujero
	ancho = 1.5;
	hprof = grosor + ancho;
	f = .5;
	dimX = 120;
	dimY = 50;

	font_height = 13;
	font_size = 35;

	scale([0.1, 0.1, 0.1]) {
		translate(posicion)
 		difference() {
			difference() {
				union() {
					cylinder(r = dimX, h = dimY, center = true);

					// Muesca angulo inicial
					rotate(a = [0, 0, 15])
					translate([dimX-hprof,0,dimZ/2+dimY])
					//cube([dimY/2, dimY/2, dimY/4], center = true);
digits(3,[1,2,3],[17,2,5]/2,false,[0,0,0],[0,0,0],1/3,1.4/3); 

					for (n = [0:len(azim)-1]) {

					}					
				}
				cylinder(r = dimX/2, h = dimY*2, center = true);
			}

			for (n = [0:len(azim)-1]) {
				rotate(a = [0, 0, azim[n]])
				translate([dimX-hprof,0,0])

				rotate(a = [0, alt[n], 0])
				cylinder(r = grosor, h = 1.5*dimX, center = true);
				// Muesca 1
			}

		}
	}
}

tambor("123", [0,0,0], [-52.155178,-0.027976453,91.84058,-175.06926],[66.87972,24.824778,50.93638,108.045334]);